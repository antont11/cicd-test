# This is a basic workflow to help you get started with Actions

name: DC1 CI/CD for production environment

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  push:
    branches: [ main ]
  workflow_dispatch:


# DC1 workflow for building, testing and scanning the DC1 Project
jobs:

  # This workflow is about building the application
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Set Java
    env:
      JAVA_HOME: /app/onestopd/jdk

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Build the project
      - name: Build the project
        run: ./gradlew clean build -x test

  copy-jar:
    needs: build

    # The type of runner that the job will run on
    runs-on: self-hosted

    # Set Deploy directory
    env:
      DEPLOY_DIR: /app/onestopd/onestopshopv2/cicd-runner

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Copy Jar
      - name: Copy Jar
        run: cp build/libs/demo-0.0.1-SNAPSHOT.jar $DEPLOY_DIR/demo-0.0.1-SNAPSHOT.jar

  deploy:
    needs: copy-jar

    # The type of runner that the job will run on
    runs-on: self-hosted

    # Set Deploy directory
    env:
      DEPLOY_DIR: /app/onestopd/onestopshopv2/cicd-runner

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Change directory
      - name: Change directory
        run: cd $DEPLOY_DIR

#      # Check backup
#      - name: Check backup
#        id: check_backup
#        uses: andstor/file-existence-action@v1
#        with:
#          files: "demo-0.0.1-SNAPSHOT_bk.jar"
#
#      # Delete backup
#      - name: Delete backup
#        if: steps.check_backup.outputs.files_exists == 'true'
#        run: rm demo-0.0.1-SNAPSHOT_bk.jar
#
#      # Check old jar
#      - name: Check old jar
#        id: check_old
#        uses: andstor/file-existence-action@v1
#        with:
#          files: "demo-0.0.1-SNAPSHOT.jar"
#
#      # Rename old jar
#      - name: Rename old jar
#        if: steps.check_old.outputs.files_exists == 'true'
#        run: mv demo-0.0.1-SNAPSHOT.jar demo-0.0.1-SNAPSHOT_bk.jar
#
#      # Check new jar
#      - name: Rename new jar
#        id: check_new
#        uses: andstor/file-existence-action@v1
#        with:
#          files: "demo-0.0.1-SNAPSHOT_new.jar"
#
#      # Rename new jar
#      - name: Rename new jar
#        if: steps.check_new.outputs.files_exists == 'true'
#        run: mv demo-0.0.1-SNAPSHOT_new.jar demo-0.0.1-SNAPSHOT.jar
#
#      # Check jar
#      - name: Run new jar
#        id: check_jar
#        uses: andstor/file-existence-action@v1
#        with:
#          files: "demo-0.0.1-SNAPSHOT.jar"

      # Run jar
      - name: Run new jar
#        if: steps.check_jar.outputs.files_exists == 'true'
        run: ./iamservices.sh restart demo-0.0.1-SNAPSHOT.jar


